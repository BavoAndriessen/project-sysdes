server.port=8080

spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/containers
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.initialization-mode=always

spring.cloud.stream.kafka.binder.brokers=kafka
spring.cloud.stream.kafka.binder.zkNodes=zookeeper

spring.cloud.stream.bindings.container_scanned_event.contentType=application/json
spring.cloud.stream.bindings.container_scanned_event.destination=container_scanned_event
spring.cloud.stream.bindings.container_scanned_event.group=1
# als er meerdere partities nodig zijn => containerid gebruiken als partitionKey, omdat dan alle messages van dezelfde container in de juiste volgorde afgehandeld zullen worden
#spring.cloud.stream.bindings.container_scanned_event.producer.partitioned=true
#spring.cloud.stream.bindings.container_scanned_event.producer.partition-key-expression=headers['partitionKey']
#spring.cloud.stream.bindings.container_scanned_event.producer.partition-count=5

spring.cloud.stream.bindings.container_approved.contentType=application/json
spring.cloud.stream.bindings.container_approved.destination=container_approved
spring.cloud.stream.bindings.container_approved.group=1

spring.cloud.stream.bindings.arrived_with_containers.contentType=application/json
spring.cloud.stream.bindings.arrived_with_containers.destination=arrived_with_containers
spring.cloud.stream.bindings.arrived_with_containers.group=1

spring.cloud.stream.bindings.ready_for_containers.contentType=application/json
spring.cloud.stream.bindings.ready_for_containers.destination=ready_for_containers
spring.cloud.stream.bindings.ready_for_containers.group=1

spring.cloud.stream.bindings.containers_ready_at_dock.contentType=application/json
spring.cloud.stream.bindings.containers_ready_at_dock.destination=containers_ready_at_dock
spring.cloud.stream.bindings.containers_ready_at_dock.group=1

spring.cloud.stream.bindings.transfer_containers_command.contentType=application/json
spring.cloud.stream.bindings.transfer_containers_command.destination=transfer_containers_command
spring.cloud.stream.bindings.transfer_containers_command.group=1
