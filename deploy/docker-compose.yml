version: "3.9" 
services:
# ------------Databases-------------
  container-db:
    image: postgres:latest
    container_name: container-db
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_DB=containers
     - POSTGRES_HOST_AUTH_METHOD="password"
    ports:
    - "5001:5432"
  administration-db:
    image: postgres:latest
    container_name: administration-db
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=pwd
     - POSTGRES_DB=administration
     - POSTGRES_HOST_AUTH_METHOD="password"
    ports:
     - "5000:5432"
  kapiteinsdienst-db:
    image: postgres:latest
    container_name: kapiteinsdienst-db
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_DB=kapiteinsdienst
     - POSTGRES_HOST_AUTH_METHOD="password"
    ports:
     - "5002:5432"
  berth-db:
    image: postgres:latest
    container_name: berth-db
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_DB=berthDb
     - POSTGRES_HOST_AUTH_METHOD="password"
    ports:
    - "5003:5432"
  vtc-db:
    image: postgres:latest
    container_name: vtc-db
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
     - POSTGRES_DB=routes
     - POSTGRES_HOST_AUTH_METHOD="password"
    ports:
    - "5004:5432"
# ------------Support services-------------
  zookeeper:
    image: confluentinc/cp-zookeeper
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
     - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    depends_on: 
      - zookeeper
    environment: 
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports: 
     - "9092:9092"
    links:
     - zookeeper
# ------------Core services----------------
  administration:
    container_name: administration
    build: ../services/adminstrationservice
    environment: 
      SPRING_DATASOURCE_URL: jdbc:postgresql://administration-db:5432/administration
    command:
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    ports:
     - "2004:8080" # todo: poort
    depends_on:
      - administration-db
      - kafka
    links:
     - kafka
     - administration-db
  container-management:
    container_name: container-management
    build: ../services/containermanagement
    command:
    - --spring.datasource.url=jdbc:postgresql://container-db:5432/containers
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    ports:
     - "2000:8080"
    depends_on:
     - container-db
     - kafka
    links:
     - kafka
     - container-db
  towingpilotage:
    container_name: towingpilotage
    build: ../services/towingpilotageservice
    command:
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    ports:
    - "2001:8080"
    depends_on:
    - kafka
    links: 
    - kafka
  maintenance:
    container_name: maintenance       
    build: ../services/maintenanceservice
    command:
    - --berthservice=berth:8080
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    ports:
    - "2002:8080"
    depends_on:
    - kafka
    - berth
    links: 
    - kafka
    - berth
  kapiteinsdienst:
    container_name: kapiteinsdienst
    build: ../services/kapiteinsdienst
    environment: 
      SPRING_DATASOURCE_URL: jdbc:postgresql://kapiteinsdienst-db:5432/kapiteinsdienst
    command:
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    ports:
     - "2005:8080"
    depends_on:
      - kapiteinsdienst-db
      - kafka
    links:
     - kafka
     - kapiteinsdienst-db
  berth:
    container_name: berth
    build: ../services/ligplaats
    environment: 
      SPRING_DATASOURCE_URL: jdbc:postgresql://berth-db:5432/berthDb
    command:
    - --spring.datasource.password=postgres
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    ports:
     - "2003:8080"
    depends_on:
      - berth-db
      - kafka
    links:
     - kafka
     - berth-db
  vtc: 
    container_name: vtc
    ports:
    - "2006:8080"
    build: ../services/vesseltrafficcontrol
    command:
    - --spring.cloud.stream.kafka.binder.brokers=kafka
    - --spring.cloud.stream.kafka.binder.zkNodes=zookeeper
    - --spring.datasource.url=jdbc:postgresql://vtc-db:5432/routes
    depends_on:
      - vtc-db
      - kafka
    links:
     - kafka
     - vtc-db
  gateway:
    container_name: gateway
    ports:
     - "8080:8080"
    build: ../services/apigateway
    environment:
      CONTAINER_MANAGEMENT_HOST: "container-management"
      ADMINISTRATION_HOST: "administration"
      KAPITEINSDIENST_HOST: "kapiteinsdienst"
      BERTH_HOST: "berth"
      MAINTENANCE_HOST: "maintenance"
      TOWINGPILOTAGE_HOST: "towingpilotage"
      VTC_HOST: "vtc"
    depends_on:
    - kapiteinsdienst
    - container-management
    - towingpilotage
    - maintenance
    - administration
    - berth
    - vtc
    links: 
    - kapiteinsdienst
    - container-management
    - towingpilotage
    - maintenance
    - administration
    - berth
    - vtc
